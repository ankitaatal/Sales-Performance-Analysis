# **Data Cleaning Process**

## **📌 Overview**
This project involved **cleaning and transforming the Superstore dataset** using **Python (Pandas) in Jupyter Notebook**. The raw dataset was **processed and split** into four structured tables: **Customers, Orders, Products, and Sales**.

The cleaned dataset ensures:
- **Data integrity** (removal of duplicates, handling missing values).
- **Consistent formatting** (standardized date formats, categorical values).
- **Logical data separation** (organizing data into relational tables).

---

## **📊 Tables & Schema**
Below is a detailed breakdown of the four tables created after the **data cleaning process**:

### **1️⃣ Customers Table**
This table contains **customer details** and their respective market segments.

| Column Name    | Description                            | Data Type     |
|---------------|----------------------------------------|--------------|
| **customer_id**  | Unique identifier for each customer | `CHAR(8)` |
| **customer_name** | Name of the customer | `VARCHAR(100)` |
| **segment** | Market segment (Consumer, Corporate, Home Office) | `VARCHAR(25)` |

---

### **2️⃣ Orders Table**
This table records **customer orders**, including order dates, shipping details, and delivery locations.

| Column Name    | Description                          | Data Type  |
|---------------|--------------------------------------|-----------|
| **order_id**    | Unique identifier for each order | `CHAR(14)` |
| **customer_id** | Customer who placed the order | `CHAR(8)` (FK → `customers`) |
| **order_date**  | Date the order was placed | `DATE` |
| **ship_date**   | Date the order was shipped | `DATE` |
| **ship_mode**   | Shipping method used | `VARCHAR(25)` |
| **region**      | Geographic region of the order | `VARCHAR(10)` |
| **country**     | Country where the order was placed | `VARCHAR(50)` |
| **state**       | State where the order was placed | `VARCHAR(50)` |
| **city**        | City where the order was placed | `VARCHAR(50)` |
| **postal_code** | Postal code of the delivery location | `VARCHAR(20)` |

---

### **3️⃣ Products Table**
This table contains **product-related details**, including categories and subcategories.

| Column Name   | Description              | Data Type     |
|--------------|--------------------------|--------------|
| **product_id** | Unique identifier for each product | `CHAR(15)` |
| **product_name** | Name of the product | `VARCHAR(255)` |
| **category** | Category of the product (Furniture, Technology, Office Supplies) | `VARCHAR(25)` |
| **sub_category** | Sub-category of the product (Chairs, Phones, Paper, etc.) | `VARCHAR(25)` |

---

### **4️⃣ Sales Table**
This table links **orders and products**, tracking quantity, sales revenue, discounts, and profit.

| Column Name  | Description | Data Type |
|-------------|-------------|----------|
| **order_id**  | Unique identifier for each order | `CHAR(14)` (FK → `orders`) |
| **product_id** | Unique identifier for each product | `CHAR(15)` (FK → `products`) |
| **quantity**  | Number of units sold | `INT` (CHECK: `> 0`) |
| **sales** | Total sales amount | `DECIMAL(12,2)` (Default: `0.00`) |
| **discount** | Discount applied (0-1 range) | `DECIMAL(5,2)` (CHECK: `0 ≤ discount ≤ 1`) |
| **profit** | Profit earned from the sale | `DECIMAL(12,2)` (Default: `0.00`) |

---
